declare const functions: {
    Client: {
        login: (host: string, key: string, callback: (status: boolean, message: string) => any, caching?: boolean) => void;
        fastLogin: (host: string, key: string, caching?: boolean) => void;
        getServerName: typeof import("./client/methods/serverInfo/getServerName").default;
        listServers: typeof import("./client/methods/serverInfo/listServers").default;
        serverDetails: typeof import("./client/methods/serverInfo/serverDetails").default;
        getCPU: typeof import("./client/methods/serverLimits/getCPU").default;
        getMemory: typeof import("./client/methods/serverLimits/getMemory").default;
        getDisk: typeof import("./client/methods/serverLimits/getDisk").default;
        isOwner: typeof import("./client/methods/serverInfo/isOwner").default;
        getIPAlias: typeof import("./client/methods/serverInfo/getServerIPAlias").default;
        getServerPort: typeof import("./client/methods/serverInfo/getServerPort").default;
        getNummericIP: typeof import("./client/methods/serverInfo/getNummericIP").default;
        getServerStatus: typeof import("./client/methods/serverInfo/getServerStatus").default;
        getCPUUsage: typeof import("./client/methods/serverUsage/getCPUUsage").default;
        getMemoryUsage: (serverId: string) => Promise<number>;
        getDiskUsage: typeof import("./client/methods/serverUsage/getDiskUsage").default;
        createBackup: typeof import("./client/methods/backups/createBackup").default;
        deleteBackup: typeof import("./client/methods/backups/deleteBackup").default;
        listBackups: typeof import("./client/methods/backups/listBackups").default;
        backupDetails: typeof import("./client/methods/backups/backupDetails").default;
        startServer: typeof import("./client/methods/serverActions/startServer").default;
        stopServer: typeof import("./client/methods/serverActions/stopServer").default;
        killServer: typeof import("./client/methods/serverActions/killServer").default;
        restartServer: typeof import("./client/methods/serverActions/restartServer").default;
        sendCommand: typeof import("./client/methods/serverActions/sendCommand").default;
        console: typeof import("./client/methods/serverActions/console").default;
        post: typeof import("./client/methods/post").default;
        patch: typeof import("./client/methods/patch").default;
        get: typeof import("./client/methods/get").default;
        put: typeof import("./client/methods/put").default;
        delete: typeof import("./client/methods/delete").default;
    };
    Admin: {
        login: (host: string, key: string, callback: (status: boolean, message: string) => any, caching?: boolean) => void;
        fastLogin: (host: string, key: string, caching?: boolean) => void;
        userDetails: typeof import("./application/methods/users/userDetails").default;
        listUsers: typeof import("./application/methods/users/listUsers").default;
        updateUser: typeof import("./application/methods/users/updateUser").default;
        createUser: typeof import("./application/methods/users/createUser").default;
        deleteUser: typeof import("./application/methods/users/deleteUser").default;
        userQuery: typeof import("./application/methods/users/userQuery").default;
        serverDetails: typeof import("./application/methods/servers/serverDetails").default;
        listServers: typeof import("./application/methods/servers/listServers").default;
        createServer: typeof import("./application/methods/servers/createServer").default;
        suspendServer: typeof import("./application/methods/servers/suspendServer").default;
        unsuspendServer: typeof import("./application/methods/servers/unsuspendServer").default;
        updateBuild: typeof import("./application/methods/servers/updateBuild").default;
        updateDetails: typeof import("./application/methods/servers/updateDetails").default;
        deleteServer: typeof import("./application/methods/servers/deleteServer").default;
        nodeDetails: typeof import("./application/methods/nodes/nodeDetails").default;
        listNodes: typeof import("./application/methods/nodes/listNodes").default;
        createNode: typeof import("./application/methods/nodes/createNode").default;
        deleteNode: typeof import("./application/methods/nodes/deleteNode").default;
        listDatabases: typeof import("./application/methods/databases/listDatabases").default;
        databaseDetails: typeof import("./application/methods/databases/databaseDetails").default;
        createDatabase: typeof import("./application/methods/databases/createDatabase").default;
        resetDatabasePassword: typeof import("./application/methods/databases/resetDatabasePassword").default;
        deleteDatabase: typeof import("./application/methods/databases/deleteDatabase").default;
        listLocations: typeof import("./application/methods/locations/listLocations").default;
        deleteLocation: typeof import("./application/methods/locations/deleteLocation").default;
        createLocation: typeof import("./application/methods/locations/createLocation").default;
        updateLocation: typeof import("./application/methods/locations/updateLocation").default;
        locationDetails: typeof import("./application/methods/locations/locationDetails").default;
        listAllocations: typeof import("./application/methods/allocations/listAllocations").default;
        deleteAllocation: typeof import("./application/methods/allocations/deleteAllocation").default;
        createAllocation: typeof import("./application/methods/allocations/createAllocation").default;
        listEggs: typeof import("./application/methods/nests/listEggs").default;
        listNests: typeof import("./application/methods/nests/listNests").default;
        eggDetails: typeof import("./application/methods/nests/eggDetails").default;
        nestDetails: typeof import("./application/methods/nests/nestDetails").default;
        post: typeof import("./application/methods/post").default;
        patch: typeof import("./application/methods/patch").default;
        get: typeof import("./application/methods/get").default;
        put: typeof import("./application/methods/put").default;
        delete: typeof import("./application/methods/delete").default;
    };
};
export = functions;
